// Mocks generated by Mockito 5.0.7 from annotations
// in eggnstone_google_analytics/test/GoogleAnalyticsService_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:firebase_analytics/firebase_analytics.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

/// A class which mocks [FirebaseAnalytics].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAnalytics extends _i1.Mock implements _i2.FirebaseAnalytics {
  MockFirebaseAnalytics() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> logEvent({String? name, Map<String, Object?>? parameters}) =>
      (super.noSuchMethod(
          Invocation.method(
              #logEvent, [], {#name: name, #parameters: parameters}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setAnalyticsCollectionEnabled(bool? enabled) =>
      (super.noSuchMethod(
          Invocation.method(#setAnalyticsCollectionEnabled, [enabled]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setUserId(String? id) =>
      (super.noSuchMethod(Invocation.method(#setUserId, [id]),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setCurrentScreen(
          {String? screenName, String? screenClassOverride = r'Flutter'}) =>
      (super.noSuchMethod(
          Invocation.method(#setCurrentScreen, [], {
            #screenName: screenName,
            #screenClassOverride: screenClassOverride
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> setUserProperty({String? name, String? value}) =>
      (super.noSuchMethod(
          Invocation.method(#setUserProperty, [], {#name: name, #value: value}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> resetAnalyticsData() =>
      (super.noSuchMethod(Invocation.method(#resetAnalyticsData, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logAddPaymentInfo() =>
      (super.noSuchMethod(Invocation.method(#logAddPaymentInfo, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logAddToCart(
          {String? itemId,
          String? itemName,
          String? itemCategory,
          int? quantity,
          double? price,
          double? value,
          String? currency,
          String? origin,
          String? itemLocationId,
          String? destination,
          String? startDate,
          String? endDate}) =>
      (super.noSuchMethod(
          Invocation.method(#logAddToCart, [], {
            #itemId: itemId,
            #itemName: itemName,
            #itemCategory: itemCategory,
            #quantity: quantity,
            #price: price,
            #value: value,
            #currency: currency,
            #origin: origin,
            #itemLocationId: itemLocationId,
            #destination: destination,
            #startDate: startDate,
            #endDate: endDate
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logAddToWishlist(
          {String? itemId,
          String? itemName,
          String? itemCategory,
          int? quantity,
          double? price,
          double? value,
          String? currency,
          String? itemLocationId}) =>
      (super.noSuchMethod(
          Invocation.method(#logAddToWishlist, [], {
            #itemId: itemId,
            #itemName: itemName,
            #itemCategory: itemCategory,
            #quantity: quantity,
            #price: price,
            #value: value,
            #currency: currency,
            #itemLocationId: itemLocationId
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logAppOpen() =>
      (super.noSuchMethod(Invocation.method(#logAppOpen, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logBeginCheckout(
          {double? value,
          String? currency,
          String? transactionId,
          int? numberOfNights,
          int? numberOfRooms,
          int? numberOfPassengers,
          String? origin,
          String? destination,
          String? startDate,
          String? endDate,
          String? travelClass}) =>
      (super.noSuchMethod(
          Invocation.method(#logBeginCheckout, [], {
            #value: value,
            #currency: currency,
            #transactionId: transactionId,
            #numberOfNights: numberOfNights,
            #numberOfRooms: numberOfRooms,
            #numberOfPassengers: numberOfPassengers,
            #origin: origin,
            #destination: destination,
            #startDate: startDate,
            #endDate: endDate,
            #travelClass: travelClass
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logCampaignDetails(
          {String? source,
          String? medium,
          String? campaign,
          String? term,
          String? content,
          String? aclid,
          String? cp1}) =>
      (super.noSuchMethod(
          Invocation.method(#logCampaignDetails, [], {
            #source: source,
            #medium: medium,
            #campaign: campaign,
            #term: term,
            #content: content,
            #aclid: aclid,
            #cp1: cp1
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logEarnVirtualCurrency(
          {String? virtualCurrencyName, num? value}) =>
      (super.noSuchMethod(
          Invocation.method(#logEarnVirtualCurrency, [],
              {#virtualCurrencyName: virtualCurrencyName, #value: value}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logEcommercePurchase(
          {String? currency,
          double? value,
          String? transactionId,
          double? tax,
          double? shipping,
          String? coupon,
          String? location,
          int? numberOfNights,
          int? numberOfRooms,
          int? numberOfPassengers,
          String? origin,
          String? destination,
          String? startDate,
          String? endDate,
          String? travelClass}) =>
      (super.noSuchMethod(
          Invocation.method(#logEcommercePurchase, [], {
            #currency: currency,
            #value: value,
            #transactionId: transactionId,
            #tax: tax,
            #shipping: shipping,
            #coupon: coupon,
            #location: location,
            #numberOfNights: numberOfNights,
            #numberOfRooms: numberOfRooms,
            #numberOfPassengers: numberOfPassengers,
            #origin: origin,
            #destination: destination,
            #startDate: startDate,
            #endDate: endDate,
            #travelClass: travelClass
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logGenerateLead({String? currency, double? value}) =>
      (super.noSuchMethod(
          Invocation.method(
              #logGenerateLead, [], {#currency: currency, #value: value}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logJoinGroup({String? groupId}) => (super.noSuchMethod(
      Invocation.method(#logJoinGroup, [], {#groupId: groupId}),
      returnValue: Future<void>.value(null),
      returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logLevelUp({int? level, String? character}) =>
      (super.noSuchMethod(
          Invocation.method(
              #logLevelUp, [], {#level: level, #character: character}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logLevelStart({String? levelName}) => (super.noSuchMethod(
      Invocation.method(#logLevelStart, [], {#levelName: levelName}),
      returnValue: Future<void>.value(null),
      returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logLevelEnd({String? levelName, int? success}) =>
      (super.noSuchMethod(
          Invocation.method(
              #logLevelEnd, [], {#levelName: levelName, #success: success}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logLogin({String? loginMethod}) => (super.noSuchMethod(
      Invocation.method(#logLogin, [], {#loginMethod: loginMethod}),
      returnValue: Future<void>.value(null),
      returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logPostScore({int? score, int? level, String? character}) =>
      (super.noSuchMethod(
          Invocation.method(#logPostScore, [],
              {#score: score, #level: level, #character: character}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logPresentOffer(
          {String? itemId,
          String? itemName,
          String? itemCategory,
          int? quantity,
          double? price,
          double? value,
          String? currency,
          String? itemLocationId}) =>
      (super.noSuchMethod(
          Invocation.method(#logPresentOffer, [], {
            #itemId: itemId,
            #itemName: itemName,
            #itemCategory: itemCategory,
            #quantity: quantity,
            #price: price,
            #value: value,
            #currency: currency,
            #itemLocationId: itemLocationId
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logPurchaseRefund(
          {String? currency, double? value, String? transactionId}) =>
      (super.noSuchMethod(
          Invocation.method(#logPurchaseRefund, [], {
            #currency: currency,
            #value: value,
            #transactionId: transactionId
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logRemoveFromCart(
          {String? itemId,
          String? itemName,
          String? itemCategory,
          int? quantity,
          double? price,
          double? value,
          String? currency,
          String? origin,
          String? itemLocationId,
          String? destination,
          String? startDate,
          String? endDate}) =>
      (super.noSuchMethod(
          Invocation.method(#logRemoveFromCart, [], {
            #itemId: itemId,
            #itemName: itemName,
            #itemCategory: itemCategory,
            #quantity: quantity,
            #price: price,
            #value: value,
            #currency: currency,
            #origin: origin,
            #itemLocationId: itemLocationId,
            #destination: destination,
            #startDate: startDate,
            #endDate: endDate
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logSearch(
          {String? searchTerm,
          int? numberOfNights,
          int? numberOfRooms,
          int? numberOfPassengers,
          String? origin,
          String? destination,
          String? startDate,
          String? endDate,
          String? travelClass}) =>
      (super.noSuchMethod(
          Invocation.method(#logSearch, [], {
            #searchTerm: searchTerm,
            #numberOfNights: numberOfNights,
            #numberOfRooms: numberOfRooms,
            #numberOfPassengers: numberOfPassengers,
            #origin: origin,
            #destination: destination,
            #startDate: startDate,
            #endDate: endDate,
            #travelClass: travelClass
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logSelectContent({String? contentType, String? itemId}) =>
      (super.noSuchMethod(
          Invocation.method(#logSelectContent, [],
              {#contentType: contentType, #itemId: itemId}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logSetCheckoutOption(
          {int? checkoutStep, String? checkoutOption}) =>
      (super.noSuchMethod(
          Invocation.method(#logSetCheckoutOption, [],
              {#checkoutStep: checkoutStep, #checkoutOption: checkoutOption}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logShare(
          {String? contentType, String? itemId, String? method}) =>
      (super.noSuchMethod(
          Invocation.method(#logShare, [],
              {#contentType: contentType, #itemId: itemId, #method: method}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logSignUp({String? signUpMethod}) => (super.noSuchMethod(
      Invocation.method(#logSignUp, [], {#signUpMethod: signUpMethod}),
      returnValue: Future<void>.value(null),
      returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logSpendVirtualCurrency(
          {String? itemName, String? virtualCurrencyName, num? value}) =>
      (super.noSuchMethod(
          Invocation.method(#logSpendVirtualCurrency, [], {
            #itemName: itemName,
            #virtualCurrencyName: virtualCurrencyName,
            #value: value
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logTutorialBegin() =>
      (super.noSuchMethod(Invocation.method(#logTutorialBegin, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logTutorialComplete() =>
      (super.noSuchMethod(Invocation.method(#logTutorialComplete, []),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logUnlockAchievement({String? id}) => (super.noSuchMethod(
      Invocation.method(#logUnlockAchievement, [], {#id: id}),
      returnValue: Future<void>.value(null),
      returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logViewItem(
          {String? itemId,
          String? itemName,
          String? itemCategory,
          String? itemLocationId,
          double? price,
          int? quantity,
          String? currency,
          double? value,
          String? flightNumber,
          int? numberOfPassengers,
          int? numberOfNights,
          int? numberOfRooms,
          String? origin,
          String? destination,
          String? startDate,
          String? endDate,
          String? searchTerm,
          String? travelClass}) =>
      (super.noSuchMethod(
          Invocation.method(#logViewItem, [], {
            #itemId: itemId,
            #itemName: itemName,
            #itemCategory: itemCategory,
            #itemLocationId: itemLocationId,
            #price: price,
            #quantity: quantity,
            #currency: currency,
            #value: value,
            #flightNumber: flightNumber,
            #numberOfPassengers: numberOfPassengers,
            #numberOfNights: numberOfNights,
            #numberOfRooms: numberOfRooms,
            #origin: origin,
            #destination: destination,
            #startDate: startDate,
            #endDate: endDate,
            #searchTerm: searchTerm,
            #travelClass: travelClass
          }),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logViewItemList({String? itemCategory}) =>
      (super.noSuchMethod(
          Invocation.method(
              #logViewItemList, [], {#itemCategory: itemCategory}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logViewSearchResults({String? searchTerm}) =>
      (super.noSuchMethod(
          Invocation.method(
              #logViewSearchResults, [], {#searchTerm: searchTerm}),
          returnValue: Future<void>.value(null),
          returnValueForMissingStub: Future.value()) as _i3.Future<void>);
}
